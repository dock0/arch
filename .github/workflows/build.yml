name: Build
on:
  pull_request:
  push:
  schedule:
  - cron: "0 * * * *"
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Update
      id: update
      run: ./meta/update.rb
      if: github.event_name == 'schedule'
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Build container
      run: docker build -t new .
      if: github.event_name != 'schedule' || steps.update.outputs.updated == 'yes'
    - name: Test container
      run: ./scripts/test.sh
      if: github.event_name != 'schedule' || steps.update.outputs.updated == 'yes'
    - name: Publish images
      run: ./meta/publish.sh
      if: github.event_name == 'push' || steps.update.outputs.updated == 'yes'
    - name: Post to a Slack channel
      if: ${{ failure() }}
      uses: slackapi/slack-github-action@v1.18.0
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      with:
        payload: |
          {
            "text": "*${{ github.repository }}*\nBuild failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*${{ github.repository }}*\nBuild failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                }
              }
            ]
          }
